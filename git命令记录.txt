git命令记录:
git config --global user.name "zhaoqian" = 设置用户名
git config --global user.email "852113606@qq.com" = 设置用户邮箱

mkdir repository = 在当前文件夹下新建文件夹repository
cd /d/repository = 移动到盘下的repository文件夹
pwd 显示当前路径

git init Initialized empty Git repository in D:/repository/.git/ = 将当前repository文件夹设置为版本控制库

git add readme.txt = 向仓库中准备添加readme.txt文件
git commit -m "版本提示信息" = 确认提交当前更新
git diff readme.txt = 查看不同版本的差异

git status = 获取仓库状态
git log = 获取仓库日志(详细)
git log --pretty=oneline = 获取仓库日志(简略)

git reset --hard HEAD^ = 回滚到上个版本(HEAD当前版本,^上个版本,^^上上个版本,以此类推,可以用数字代替HEAD^(HEAD~100))

cat readme.txt = 查看read.txt文件
git reset --hard 9367ea10c = 回滚到9367ea10c(commit id)版本,可以只写前几位

git reflog = 查看命令日志(可以查到commit id)

git diff HEAD -- readme.txt = 查看工作区和版本库里面最新版本的区别

git checkout -- readme.txt = 将readme.txt这个文件回到最近一次git commit或git add时的状态
git reset HEAD readme.txt = 撤销(unstage)暂存区的修改撤销
rm 文件名 = 删除该文件(可以用git checkout -- 文件名恢复)
git rm test.txt = 彻底从版本库中删除文件(无法用git checkout -- 文件名恢复)

git remote add origin git@github.com:zhaoqian0722(github账户名)/repository(github仓库名).git = 将本地git仓库与远程仓库关联
git push -u origin master = 将本地库的所有内容 推送到远程库上(origin远程库的默认名)
git push origin master = 将本地master分支的最新修改推送至GitHub

git clone git@github.com:zhaoqian0722(github账户名)/gitSkills(github仓库名).git = 用命令git clone将远程库克隆到一个本地库
git branch dev = 创建一个分支dev
git checkout dev = 切换到分支dev
git checkout -b dev = 创建并切换到分支dev(等于上面两条指令)
git branch = 查看分支
git merge dev = 将指定分支合并到当前分支
git branch -d dev = 删除分支dev
git log --graph --pretty=oneline --abbrev-commit = 该命令可以看到两个分支的合并情况

